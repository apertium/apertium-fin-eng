<?xml version="1.0" encoding="UTF-8"?>
<!-- -*- nxml -*- -->
<transfer default="chunk">
  <section-def-cats>

    <def-cat n="neg-verb"> <!-- ei vblex.neg.p3.sg -->
      <cat-item lemma="ei" tags="vblex.neg.*"/>
      <cat-item lemma="ei" tags="vblex.neg.actv.p3.sg.@\+FAUXV"/>
    </def-cat>

    <def-cat n="conneg"> <!-- tietää vblex.actv.pres.conneg -->
      <cat-item tags="vblex.*.*.conneg"/>
      <cat-item tags="vblex.*.*.conneg.*"/>
    </def-cat>
    <def-cat n="cop-conneg">
      <cat-item lemma="olla" tags="*.*.*.conneg"/>
      <cat-item lemma="olla" tags="*.*.*.conneg.*"/>
    </def-cat>
    <def-cat n="conneg_nottable"> 
      <cat-item lemma="voida" tags="*.*.*.conneg"/>
      <cat-item lemma="voida" tags="*.*.*.conneg.*"/>
    </def-cat>
    <def-cat n="adneg">
        <cat-item lemma="koskaan" tags="adv"/>
    </def-cat>
    <def-cat n="adv">
        <cat-item tags="adv"/>
    </def-cat>
    <def-cat n="cnjcoo">
        <cat-item tags="cnjcoo"/>
        <cat-item tags="cnjcoo.*"/>
    </def-cat>
    <def-cat n="necessive">
        <cat-item lemma="täytyä" tags="vaux.*"/>
    </def-cat>
    <def-cat n="gen-subj">
        <cat-item tags="*.*.gen"/>
        <cat-item tags="*.*.*.*.*.gen"/>
    </def-cat>
    <def-cat n="adv-misc">
        <cat-item tags="adv.*"/>
    </def-cat>
    <def-cat n="pron-misc">
        <cat-item tags="prn.*"/>
    </def-cat>
    <def-cat n="pron-pers">
        <cat-item tags="prn.pers.*"/>
    </def-cat>
    <def-cat n="habitive">
        <cat-item tags="n.*.ade"/>
    </def-cat>
    <def-cat n="possessional">
        <cat-item lemma="olla" tags="vblex.actv.*.p3.sg"/>
    </def-cat>
    <def-cat n="sint-pers">
        <cat-item tags="vblex.*.*.p1.*"/>
        <cat-item tags="vblex.*.*.p2.*"/>
    </def-cat>
    <def-cat n="infma-ine">
      <cat-item tags="vblex.actv.infma.sg.ine"/>
    </def-cat>
    <def-cat n="just-inf">
      <cat-item tags="vblex.actv.infa.sg"/>
      <cat-item tags="vblex.actv.infma.sg.ill"/>
    </def-cat>
    <def-cat n="vbneg">
        <cat-item tags="vblex.neg.*.*.*"/>
    </def-cat>
    <def-cat n="post">
      <cat-item tags="post"/>
    </def-cat>
    <def-cat n="num">
      <cat-item tags="num.*"/>
    </def-cat>
    <def-cat n="adj">
      <cat-item tags="adj.*"/>
    </def-cat>
    <def-cat n="cm">
      <cat-item tags="cm"/>
    </def-cat>
    <def-cat n="nom">
      <cat-item tags="n.*"/>
      <cat-item tags="n.*.*"/>
      <cat-item tags="n.*.*.*"/>
      <cat-item tags="np.*"/>
    </def-cat>
    <def-cat n="sent">
      <cat-item tags="sent"/>
    </def-cat>

    <def-cat n="verb-past">
        <cat-item tags="vblex.*.past.*"/>
    </def-cat>
    <def-cat n="verb-pres">
        <cat-item tags="vblex.*.pres.*"/>
    </def-cat>
    <def-cat n="vbolla">
        <cat-item lemma="olla" tags="vblex.*"/>
    </def-cat>
  </section-def-cats>
  <section-def-attrs>
    <def-attr n="a_verb">
      <attr-item tags="vblex"/>
      <attr-item tags="vblex.actv"/>
      <attr-item tags="vblex.pasv"/>
      <attr-item tags="vaux"/>
      <attr-item tags="vaux.actv"/>
      <attr-item tags="vaux.pasv"/>
    </def-attr>
    <def-attr n="person">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
    </def-attr>
    <def-attr n="tense">
      <attr-item tags="past"/>
      <attr-item tags="pres"/>
    </def-attr>
    <def-attr n="a_adv">
        <attr-item tags="adv"/>
        <attr-item tags="adv.itg"/>
    </def-attr>
    <def-attr n="a_nom">
      <attr-item tags="n"/>
      <attr-item tags="vblex.subst"/>
      <attr-item tags="np.ant"/>
      <attr-item tags="np.ant.f"/>
      <attr-item tags="np.ant.m"/>
    </def-attr>
    <def-attr n="a_adj">
      <attr-item tags="adj"/>
      <attr-item tags="adj.sint"/>
    </def-attr>
    <def-attr n="a_prn">
      <attr-item tags="prn.pers"/>
    </def-attr>
    <def-attr n="a_num">
      <attr-item tags="num"/>
    </def-attr>
    <def-attr n="a_nbr">
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
    </def-attr>
    <def-attr n="a_pers">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
    </def-attr>
    <def-attr n="a_gen">
      <attr-item tags="m"/>
      <attr-item tags="nt"/>
      <attr-item tags="f"/>
    </def-attr>
    <def-attr n="a_cas">
      <attr-item tags="abl"/>
      <attr-item tags="acc"/>
      <attr-item tags="ade"/>
      <attr-item tags="ela"/>
      <attr-item tags="gen"/>
      <attr-item tags="all"/>
      <attr-item tags="ill"/>
      <attr-item tags="ine"/>
      <attr-item tags="ins"/>
      <attr-item tags="nom"/>
      <attr-item tags="abe"/>
      <attr-item tags="com"/>
      <attr-item tags="ess"/>
      <attr-item tags="par"/>
    </def-attr>
    <def-attr n="a_poss">
        <attr-item tags="px1sg"/>
        <attr-item tags="px2sg"/>
        <attr-item tags="px3sg"/>
        <attr-item tags="px1pl"/>
        <attr-item tags="px2pl"/>
        <attr-item tags="px3pl"/>
        <attr-item tags="px3sp"/>
    </def-attr>

    <def-attr n="synfunc">
      <attr-item tags="CLB"/>
      <attr-item tags="@\+FAUXV"/>
      <attr-item tags="@\+FMAINV"/>
      <attr-item tags="@-FADVL"/>
      <attr-item tags="@-FAUXV"/>
      <attr-item tags="@-FMAINV"/>
      <attr-item tags="@-FOBJ→"/>
      <attr-item tags="@-FSUBJ→"/>
      <attr-item tags="@-F←OBJ"/>
      <attr-item tags="@ADVL"/>
      <attr-item tags="@ADVL←"/>
      <attr-item tags="@ADVL→"/>
      <attr-item tags="@COMP-CS←"/>
      <attr-item tags="@HAB"/>
      <attr-item tags="@CNP"/>
      <attr-item tags="@CVP"/>
      <attr-item tags="@HNOUN"/>
      <attr-item tags="@INTERJ"/>
      <attr-item tags="@NEC-S"/>
      <attr-item tags="@NF-S"/>
      <attr-item tags="@Num←"/>
      <attr-item tags="@N←"/>
      <attr-item tags="@OBJ"/>
      <attr-item tags="@OBJ"/>
      <attr-item tags="@OBJ→"/>
      <attr-item tags="@OPRED"/>
      <attr-item tags="@OPRED→"/>
      <attr-item tags="@PC"/>
      <attr-item tags="@PCLE"/>
      <attr-item tags="@Pron←"/>
      <attr-item tags="@P←"/>
      <attr-item tags="@P→"/>
      <attr-item tags="@SPRED"/>
      <attr-item tags="@SPRED←OBJ"/>
      <attr-item tags="@SPRED→"/>
      <attr-item tags="@SUBJ"/>
      <attr-item tags="@SUBJ"/>
      <attr-item tags="@SUBJ→"/>
      <attr-item tags="@←ADVL"/>
      <attr-item tags="@←OBJ"/>
      <attr-item tags="@←OPRED"/>
      <attr-item tags="@←P"/>
      <attr-item tags="@←SPRED"/>
      <attr-item tags="@←SUBJ"/>
      <attr-item tags="@→A"/>
      <attr-item tags="@→ADVL"/>
      <attr-item tags="@→N"/>
      <attr-item tags="@→Num"/>
      <attr-item tags="@→P"/>
      <attr-item tags="@→Pron"/>
    </def-attr>


  </section-def-attrs>
  <section-def-vars>
    <def-var n="number"/>
    <def-var n="sntype"/>
    <def-var n="current_verb"/>
  </section-def-vars>
  <section-def-macros>
 
    <def-macro n="proc-synlabel1" npar="1">
          <let><clip pos="1" side="tl" part="synfunc"/><lit v=""/></let>
    </def-macro>

    <def-macro n="case-handler1" npar="1">
          <let><clip pos="1" side="tl" part="synfunc"/><lit v=""/></let>
          <choose>
            <when>
              <test><or> <!-- Nom/Acc and locative cases -->
                <!--<equal><clip pos="1" side="sl" part="a_cas"/><lit-tag v="acc"/></equal>-->
                <!--<equal><clip pos="1" side="sl" part="a_cas"/><lit-tag v="nom"/></equal>-->
                <equal><clip pos="1" side="sl" part="a_cas"/><lit-tag v="ine"/></equal>
                <equal><clip pos="1" side="sl" part="a_cas"/><lit-tag v="ela"/></equal>
                <equal><clip pos="1" side="sl" part="a_cas"/><lit-tag v="ill"/></equal>
                <equal><clip pos="1" side="sl" part="a_cas"/><lit-tag v="par"/></equal>
                <equal><clip pos="1" side="sl" part="a_cas"/><lit-tag v="ade"/></equal>
                <equal><clip pos="1" side="sl" part="a_cas"/><lit-tag v="abl"/></equal>
                <equal><clip pos="1" side="sl" part="a_cas"/><lit-tag v="all"/></equal>
                <equal><clip pos="1" side="sl" part="a_cas"/><lit-tag v="abe"/></equal>
                <equal><clip pos="1" side="sl" part="a_cas"/><lit-tag v="ins"/></equal>
                <equal><clip pos="1" side="sl" part="a_cas"/><lit-tag v="com"/></equal>
                <equal><clip pos="1" side="sl" part="a_cas"/><lit-tag v="ess"/></equal>
        </or></test>

              <let><clip pos="1" side="tl" part="a_cas"/><lit-tag v="nom"/></let>
              <let><var n="sntype"/><lit-tag v="SN"/></let>
            </when>
            <when>
              <test><and>
                 <equal><clip pos="1" side="tl" part="a_cas"/><lit-tag v="gen"/></equal>
                 <not><equal><clip pos="1" side="tl" part="a_prn"/><lit-tag v="prn.pers"/></equal></not>
              </and></test>
              <let><clip pos="1" side="tl" part="a_cas"/><lit-tag v="nom"/></let>
              <let><clip pos="1" side="tl" part="a_cas"/><lit-tag v="nom"/></let>
              <let><var n="sntype"/><lit-tag v="SN.GEN"/></let>
            </when>
        </choose>
    </def-macro>
  </section-def-macros>
  <section-rules>





    <rule comment="REGLA: adv-misc">
      <pattern>
        <pattern-item n="adv-misc"/>
      </pattern>
      <action>
        <call-macro n="case-handler1"> 
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="proc-synlabel1"> 
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="adv" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="SN"/></tag>
              <tag><clip pos="1" side="sl" part="a_cas"/></tag>
            </tags>
            <lu>
                <clip pos="1" side="tl" part="lem"/>
                <clip pos="1" side="tl" part="a_adv"/> 
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: pron-misc">
      <pattern>
        <pattern-item n="pron-misc"/>
      </pattern>
      <action>
        <call-macro n="case-handler1"> 
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="proc-synlabel1"> 
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="pron" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><clip pos="1" side="sl" part="a_cas"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>




    <rule comment="REGLA: pron-pers">
      <pattern>
        <pattern-item n="pron-pers"/>
      </pattern>
      <action>
        <call-macro n="case-handler1"> 
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="proc-synlabel1"> 
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="pron" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><clip pos="1" side="sl" part="a_cas"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>











    <rule comment="REGLA: NOM">
      <pattern>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="case-handler1"> 
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="proc-synlabel1"> 
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="n" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
              <tag><clip pos="1" side="sl" part="a_cas"/></tag>
              <tag><clip pos="1" side="sl" part="a_poss"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="a_nbr"/>
              <clip pos="1" side="tl" part="a_cas"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: adj">
      <pattern>
        <pattern-item n="adj"/>
      </pattern>
      <action>
        <call-macro n="proc-synlabel1"> 
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="j" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SA"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adj"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: adj cm adj nom">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="cm"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="case-handler1"> 
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="proc-synlabel1"> 
          <with-param pos="4"/>
        </call-macro>
        <out>
          <chunk name="j_j_n" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
              <tag><clip pos="4" side="sl" part="a_cas"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adj"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_adj"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_nom"/>
              <clip pos="4" side="tl" part="a_nbr"/>
              <clip pos="4" side="tl" part="a_cas"/>
              <clip pos="4" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="REGLA: adj nom">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="case-handler1"> 
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="proc-synlabel1"> 
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="j_n" case="caseFirstWord">
            <tags>
              <tag><var n="sntype"/></tag>
              <tag><clip pos="2" side="sl" part="a_cas"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adj"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_nom"/>
              <clip pos="2" side="tl" part="a_nbr"/>
              <clip pos="2" side="tl" part="a_cas"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: neg-verb nega conneg">
      <pattern>
         <pattern-item n="neg-verb"/>
         <pattern-item n="adneg"/>
         <pattern-item n="conneg"/>
      </pattern>
      <action>
        <call-macro n="proc-synlabel1"> 
          <with-param pos="2"/>
        </call-macro>
        <choose>
          <when>
            <test>
              <or>
                <equal><clip pos="2" side="tl" part="a_verb"/><lit-tag v="vaux.actv"/></equal>
                <not><and>
                   <equal><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></equal>
                   <equal><clip pos="1" side="tl" part="person"/><lit-tag v="p3"/></equal>
                </and></not>
              </or>
            </test>
            <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
            <let><clip pos="1" side="tl" part="person"/><lit v=""/></let>
          </when>
        </choose>
     
        <out> 
          <chunk name="notted" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
          <lu>
              <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="1"/> <!-- space character between words -->
          <lu>
            <clip pos="3" side="tl" part="lem"/> <!-- know --> 
            <clip pos="3" side="tl" part="a_verb"/> <!-- vblex.actv -->
            <clip pos="3" side="tl" part="tense"/> <!-- pres -->
            <clip pos="1" side="tl" part="person"/> <!-- p3 --> 
            <clip pos="1" side="tl" part="a_nbr"/> <!-- sg -->
          </lu>
          </chunk>
        </out>      
      </action>
    </rule>

    <rule comment="REGLA: infma-ine">
      <pattern>
        <pattern-item n="infma-ine"/>
      </pattern>
      <action>
        <out>
          <chunk name="ger" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="ger"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: just inf">
      <pattern>
        <pattern-item n="just-inf"/>
      </pattern>
      <action>
        <out>
          <chunk name="to-do" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
                <lit v="to"/>
                <lit-tag v="pr"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
                <lit-tag v="vblex.inf"/>
            </lu>
          </chunk>
        </out>
      </action>
  </rule>

    <rule comment="REGLA: neg-verb conneg just-inf">
      <pattern>
         <pattern-item n="neg-verb"/>
         <pattern-item n="conneg_nottable"/>
         <pattern-item n="just-inf"/>
      </pattern>
      <action>
        <call-macro n="proc-synlabel1"> 
          <with-param pos="3"/>
        </call-macro>
      
        <choose>
          <when>
            <test>
              <or>
                <equal><clip pos="2" side="tl" part="a_verb"/><lit-tag v="vaux.actv"/></equal>
                <not><and>
                   <equal><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></equal>
                   <equal><clip pos="1" side="tl" part="person"/><lit-tag v="p3"/></equal>
                </and></not>
              </or>
            </test>
            <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
            <let><clip pos="1" side="tl" part="person"/><lit v=""/></let>
          </when>
        </choose>
     
        <out> 
          <chunk name="notted" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
          <lu>
            <clip pos="2" side="tl" part="lem"/> <!-- know --> 
            <clip pos="2" side="tl" part="a_verb"/> <!-- vblex.actv -->
            <clip pos="2" side="tl" part="tense"/> <!-- pres -->
            <clip pos="1" side="tl" part="person"/> <!-- p3 --> 
            <clip pos="1" side="tl" part="a_nbr"/> <!-- sg -->
          </lu>
          <b pos="1"/> <!-- space character between words -->
          <lu>
            <lit v="not"/> <!-- not -->
            <lit-tag v="adv"/> <!-- adv -->
          </lu>
          <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>      
      </action>
    </rule>

    <rule comment="REGLA: neg-verb cop-conneg">
      <pattern>
         <pattern-item n="neg-verb"/>
         <pattern-item n="cop-conneg"/>
      </pattern>
      <action>
        <choose>
          <when>
            <test>
              <or>
                <equal><clip pos="2" side="tl" part="a_verb"/><lit-tag v="vaux.actv"/></equal>
                <not><and>
                   <equal><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></equal>
                   <equal><clip pos="1" side="tl" part="person"/><lit-tag v="p3"/></equal>
                </and></not>
              </or>
            </test>
            <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
            <let><clip pos="1" side="tl" part="person"/><lit v=""/></let>
          </when>
        </choose>
     
        <out> 
          <chunk name="neg-cop" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV.COP"/></tag>
            </tags>
          <lu>
            <clip pos="2" side="tl" part="lem"/> <!-- know --> 
            <clip pos="2" side="tl" part="a_verb"/> <!-- vblex.actv -->
            <clip pos="2" side="tl" part="tense"/> <!-- pres -->
            <clip pos="1" side="tl" part="person"/> <!-- p3 --> 
            <clip pos="1" side="tl" part="a_nbr"/> <!-- sg -->
          </lu>
          <b pos="1"/> <!-- space character between words -->
          <lu>
            <lit v="not"/> <!-- not -->
            <lit-tag v="adv"/> <!-- adv -->
          </lu>
          </chunk>
        </out>      
      </action>
    </rule>


    <rule comment="REGLA: neg-verb nega conneg">
      <pattern>
          <pattern-item n="neg-verb"/>
          <pattern-item n="adneg"/>
         <pattern-item n="conneg_nottable"/>
      </pattern>
      <action>
        <choose>
          <when>
            <test>
              <equal><clip pos="2" side="tl" part="a_verb"/><lit-tag v="vaux.actv"/></equal>
            </test>
            <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
            <let><clip pos="1" side="tl" part="person"/><lit v=""/></let>
          </when>
        </choose>
     
        <out> 
          <chunk name="notted" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
          <lu>
            <clip pos="3" side="tl" part="lem"/> <!-- know --> 
            <clip pos="3" side="tl" part="a_verb"/> <!-- vblex.actv -->
            <clip pos="3" side="tl" part="tense"/> <!-- pres -->
            <clip pos="3" side="tl" part="person"/> <!-- p3 --> 
            <clip pos="1" side="tl" part="a_nbr"/> <!-- sg -->
          </lu>
          <b pos="1"/> <!-- space character between words -->
          <lu>
            <lit v="not"/> <!-- not -->
            <lit-tag v="adv"/> <!-- adv -->
          </lu>
          </chunk>
        </out>      
      </action>
    </rule>


    <rule comment="REGLA: neg-verb conneg">
      <pattern>
         <pattern-item n="neg-verb"/>
         <pattern-item n="conneg_nottable"/>
      </pattern>
      <action>
        <choose>
          <when>
            <test>
              <or>
                <equal><clip pos="2" side="tl" part="a_verb"/><lit-tag v="vaux.actv"/></equal>
                <not><and>
                   <equal><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></equal>
                   <equal><clip pos="1" side="tl" part="person"/><lit-tag v="p3"/></equal>
                </and></not>
              </or>
            </test>
            <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
            <let><clip pos="1" side="tl" part="person"/><lit v=""/></let>
          </when>
        </choose>
     
        <out> 
          <chunk name="notted" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
          <lu>
            <clip pos="2" side="tl" part="lem"/> <!-- know --> 
            <clip pos="2" side="tl" part="a_verb"/> <!-- vblex.actv -->
            <clip pos="2" side="tl" part="tense"/> <!-- pres -->
            <clip pos="1" side="tl" part="person"/> <!-- p3 --> 
            <clip pos="1" side="tl" part="a_nbr"/> <!-- sg -->
          </lu>
          <b pos="1"/> <!-- space character between words -->
          <lu>
            <lit v="not"/> <!-- not -->
            <lit-tag v="adv"/> <!-- adv -->
          </lu>
          </chunk>
        </out>      
      </action>
    </rule>

    <rule comment="REGLA: neg conneg">
      <pattern>
        <pattern-item n="vbneg"/>
        <pattern-item n="conneg"/>
      </pattern>
      <action>
        <out>
          <chunk name="negation" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
                <lit v="do"/>
                <lit-tag v="vblex.actv.pres"/>
                <clip pos="1" side="tl" part="a_pers"/>
                <clip pos="1" side="tl" part="a_nbr"/>
            </lu>
            <b pos="1"/>
            <lu>
                <lit v="not"/>
                <lit-tag v="adv"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <lit-tag v="pres"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: vbolla">
      <pattern>
         <pattern-item n="vbolla"/>
      </pattern>
      <action>
        <out> 
          <chunk name="cop" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV.COP"/></tag>
            </tags>
          <lu>
            <clip pos="1" side="tl" part="lem"/> <!-- know --> 
            <clip pos="1" side="tl" part="a_verb"/> <!-- vblex.actv -->
            <clip pos="1" side="tl" part="tense"/> <!-- pres -->
            <clip pos="1" side="tl" part="person"/> <!-- p3 --> 
            <clip pos="1" side="tl" part="a_nbr"/> <!-- sg -->
          </lu>
          </chunk>
        </out>      
      </action>
    </rule>


    <rule comment="REGLA: verb-past">
      <pattern>
         <pattern-item n="verb-past"/>
      </pattern>
      <action>
            <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
            <let><clip pos="1" side="tl" part="person"/><lit v=""/></let>
        <out> 
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="sl" part="person"/></tag>
              <tag><clip pos="1" side="sl" part="a_nbr"/></tag>
            </tags>
          <lu>
            <clip pos="1" side="tl" part="lem"/> <!-- know --> 
            <clip pos="1" side="tl" part="a_verb"/> <!-- vblex.actv -->
            <clip pos="1" side="tl" part="tense"/> <!-- pres -->
            <clip pos="1" side="tl" part="person"/> <!-- p3 --> 
            <clip pos="1" side="tl" part="a_nbr"/> <!-- sg -->
          </lu>
          </chunk>
        </out>      
      </action>
    </rule>

    <rule comment="REGLA: verb-pres">
      <pattern>
         <pattern-item n="verb-pres"/>
      </pattern>
      <action>
        <choose>
          <when>
            <test>
              <or>
                <equal><clip pos="1" side="tl" part="a_verb"/><lit-tag v="vaux.actv"/></equal>
                <not><and>
                   <equal><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="sg"/></equal>
                   <equal><clip pos="1" side="tl" part="person"/><lit-tag v="p3"/></equal>
                </and></not>
              </or>
            </test>
            <let><clip pos="1" side="tl" part="a_nbr"/><lit v=""/></let>
            <let><clip pos="1" side="tl" part="person"/><lit v=""/></let>
          </when>
        </choose>
     
        <out> 
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="sl" part="person"/></tag>
              <tag><clip pos="1" side="sl" part="a_nbr"/></tag>
            </tags>
          <lu>
            <clip pos="1" side="tl" part="lem"/> <!-- know --> 
            <clip pos="1" side="tl" part="a_verb"/> <!-- vblex.actv -->
            <clip pos="1" side="tl" part="tense"/> <!-- pres -->
            <clip pos="1" side="tl" part="person"/> <!-- p3 --> 
            <clip pos="1" side="tl" part="a_nbr"/> <!-- sg -->
          </lu>
          </chunk>
        </out>      
      </action>
    </rule>

    <rule comment="REGLA: num">
      <pattern>
        <pattern-item n="num"/>
      </pattern>
      <action>
        <out>
          <chunk name="num" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NUM"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_num"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: num nom">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="case-handler1"> 
          <with-param pos="2"/>
        </call-macro>
        <choose>
          <when>
            <test><not>
              <equal><clip pos="1" side="tl" part="lem"/><lit v="one"/></equal></not>
            </test>
            <let><clip pos="2" side="tl" part="a_nbr"/><lit-tag v="pl"/></let>
          </when>
        </choose>
        <out>
          <chunk name="num" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NUM"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_num"/>
            </lu>
            <b pos="0"/>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nom"/>
              <clip pos="2" side="tl" part="a_nbr"/>
              <clip pos="2" side="tl" part="a_cas"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: habitive stuff">
      <pattern>
          <pattern-item n="habitive"/>
          <pattern-item n="possessional"/>
      </pattern>
      <action>
        <call-macro n="proc-synlabel1"> 
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="verb phrase" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
                <clip pos="1" side="tl" part="lem"/>
                <clip pos="1" side="tl" part="a_nom"/>
                <clip pos="1" side="tl" part="a_nbr"/>
                <lit-tag v="gen"/>
            </lu>
            <b pos="1"/>
            <lu>
                <clip pos="2" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: POST">
      <pattern>
        <pattern-item n="post"/>
      </pattern>
      <action>
        <call-macro n="proc-synlabel1"> 
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="post" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="POST"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: ADV">
      <pattern>
        <pattern-item n="adv"/>
      </pattern>
      <action>
        <call-macro n="proc-synlabel1"> 
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="adv" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="ADV"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: Necessrary">
      <pattern>
        <pattern-item n="gen-subj"/>
        <pattern-item n="necessive"/>
      </pattern>
      <action>
        <out>
          <chunk name="NECESSIVE" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP-NEC"/></tag>
            </tags>
            <lu>
                <clip pos="1" side="tl" part="whole"/>
                <!-- should be s/gen/nom/ -->
          </lu>
          <b pos="1"/>
            <lu>
                <lit v="must"/>
                <lit-tag v="vaux"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    
    <rule comment="REGLA: cnjcoo">
      <pattern>
        <pattern-item n="cnjcoo"/>
      </pattern>
      <action>
        <call-macro n="proc-synlabel1"> 
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="cc" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="CC"/></tag>
            </tags>
            <lu>
                <!-- because CG introduces CLB tag for cnjcoo -->
                <clip pos="1" side="tl" part="lem"/>
                <lit-tag v="cnjcoo"/>
            </lu>
            </chunk>
        </out>
      </action>
    </rule>

 
    <rule comment="REGLA: SENT">
      <pattern>
        <pattern-item n="sent"/>
      </pattern>
      <action>
        <call-macro n="proc-synlabel1"> 
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="sent" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SENT"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


  </section-rules>
</transfer>
